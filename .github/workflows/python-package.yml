# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

                    - name: Deploy to IBM Cloud Foundry
  # You may pin to the exact commit or the version.
  # uses: IBM/cloudfoundry-deploy@fcb5a74cb36e7cd0bfe9f9b5d9d57aab85d00bd1
  uses: IBM/cloudfoundry-deploy@v2.1
  with:
    # IBM Cloud API key
    IBM_CLOUD_API_KEY: 
    # IBM Cloud Foundry API endpoint
    IBM_CLOUD_CF_API: 
    # IBM Cloud Foundry organization name
    IBM_CLOUD_CF_ORG: 
    # IBM Cloud Foundry space name
    IBM_CLOUD_CF_SPACE: 
    # App Manifest file
    APP_MANIFEST_FILE: # optional, default is manifest.yml
    # App variables file
    APP_VARS_FILE: # optional
    # IBM Cloud Foundry resource group
    RESOURCE_GROUP: # optional
          
